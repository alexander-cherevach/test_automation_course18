<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="7" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-04-01T07:42:05Z" name="Parallel tests" finished-at="2019-04-01T07:42:05Z" duration-ms="200">
    <groups>
    </groups>
    <test started-at="2019-04-01T07:42:05Z" name="ctg test" finished-at="2019-04-01T07:42:05Z" duration-ms="47">
      <class name="alex.CtgTest">
        <test-method signature="ctgTest(double, double)[pri:0, instance:alex.CtgTest@38afe297]" started-at="2019-04-01T07:42:05Z" name="ctgTest" finished-at="2019-04-01T07:42:05Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.9999092042625951]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
      </class> <!-- alex.CtgTest -->
    </test> <!-- ctg test -->
    <test started-at="2019-04-01T07:42:05Z" name="sin test" finished-at="2019-04-01T07:42:05Z" duration-ms="48">
      <class name="alex.MyFirstTest">
        <test-method signature="cosTest(double, double)[pri:0, instance:alex.MyFirstTest@5e5d171f]" started-at="2019-04-01T07:42:05Z" name="cosTest" finished-at="2019-04-01T07:42:05Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.7568024953079282]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
      </class> <!-- alex.MyFirstTest -->
    </test> <!-- sin test -->
    <test started-at="2019-04-01T07:42:05Z" name="cos test" finished-at="2019-04-01T07:42:05Z" duration-ms="47">
      <class name="alex.MyFirstTest">
        <test-method signature="cosTest(double, double)[pri:0, instance:alex.MyFirstTest@1a677343]" started-at="2019-04-01T07:42:05Z" name="cosTest" finished-at="2019-04-01T07:42:05Z" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5403023058681398]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.5403023058681398] but found [0.8414709848078965]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.5403023058681398] but found [0.8414709848078965]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at alex.MyFirstTest.cosTest(MyFirstTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
      </class> <!-- alex.MyFirstTest -->
    </test> <!-- cos test -->
    <test started-at="2019-04-01T07:42:05Z" name="div test" finished-at="2019-04-01T07:42:05Z" duration-ms="6">
      <class name="alex.divTest">
        <test-method signature="divTest(double, double, double)[pri:0, instance:alex.divTest@69453e37]" started-at="2019-04-01T07:42:05Z" name="divTest" finished-at="2019-04-01T07:42:05Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.0] but found [Infinity]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.0] but found [Infinity]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at alex.divTest.divTest(divTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
      </class> <!-- alex.divTest -->
    </test> <!-- div test -->
    <test started-at="2019-04-01T07:42:05Z" name="div long test" finished-at="2019-04-01T07:42:05Z" duration-ms="10">
      <class name="alex.DivLongTest">
        <test-method signature="divTest(long, long, long)[pri:0, instance:alex.DivLongTest@22fcf7ab]" started-at="2019-04-01T07:42:05Z" name="divTest" finished-at="2019-04-01T07:42:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
      </class> <!-- alex.DivLongTest -->
    </test> <!-- div long test -->
    <test started-at="2019-04-01T07:42:05Z" name="isPositive test" finished-at="2019-04-01T07:42:05Z" duration-ms="12">
      <class name="alex.isPositiveTest">
        <test-method signature="divTest(long, boolean)[pri:0, instance:alex.isPositiveTest@bccb269]" started-at="2019-04-01T07:42:05Z" name="divTest" finished-at="2019-04-01T07:42:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
      </class> <!-- alex.isPositiveTest -->
    </test> <!-- isPositive test -->
    <test started-at="2019-04-01T07:42:05Z" name="isNegative test" finished-at="2019-04-01T07:42:05Z" duration-ms="11">
      <class name="alex.isNegativeTest">
        <test-method signature="divTest(long, boolean)[pri:0, instance:alex.isNegativeTest@5fbe4146]" started-at="2019-04-01T07:42:05Z" name="divTest" finished-at="2019-04-01T07:42:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
      </class> <!-- alex.isNegativeTest -->
    </test> <!-- isNegative test -->
    <test started-at="2019-04-01T07:42:05Z" name="mult double test" finished-at="2019-04-01T07:42:05Z" duration-ms="4">
      <class name="alex.multTest">
        <test-method signature="divTest(double, double, double)[pri:0, instance:alex.multTest@5aebe890]" started-at="2019-04-01T07:42:05Z" name="divTest" finished-at="2019-04-01T07:42:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
      </class> <!-- alex.multTest -->
    </test> <!-- mult double test -->
    <test started-at="2019-04-01T07:42:05Z" name="mult long test" finished-at="2019-04-01T07:42:05Z" duration-ms="6">
      <class name="alex.MultLongTest">
        <test-method signature="divTest(long, long, long)[pri:0, instance:alex.MultLongTest@8c3b9d]" started-at="2019-04-01T07:42:05Z" name="divTest" finished-at="2019-04-01T07:42:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
      </class> <!-- alex.MultLongTest -->
    </test> <!-- mult long test -->
    <test started-at="2019-04-01T07:42:05Z" name="sub double test" finished-at="2019-04-01T07:42:05Z" duration-ms="7">
      <class name="alex.SubTest">
        <test-method signature="cosTest(double, double, double)[pri:0, instance:alex.SubTest@4c309d4d]" started-at="2019-04-01T07:42:05Z" name="cosTest" finished-at="2019-04-01T07:42:05Z" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.34]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.75]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7.09]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [7.09] but found [-7.09]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [7.09] but found [-7.09]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at alex.SubTest.cosTest(SubTest.java:15)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
      </class> <!-- alex.SubTest -->
    </test> <!-- sub double test -->
    <test started-at="2019-04-01T07:42:05Z" name="sqrt test" finished-at="2019-04-01T07:42:05Z" duration-ms="12">
      <class name="alex.SqrtTest">
        <test-method signature="cosTest(double, double)[pri:0, instance:alex.SqrtTest@687e99d8]" started-at="2019-04-01T07:42:05Z" name="cosTest" finished-at="2019-04-01T07:42:05Z" duration-ms="9" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [9.0] but found [1.7320508075688772]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [9.0] but found [1.7320508075688772]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at alex.SqrtTest.cosTest(SqrtTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
      </class> <!-- alex.SqrtTest -->
    </test> <!-- sqrt test -->
    <test started-at="2019-04-01T07:42:05Z" name="pow test" finished-at="2019-04-01T07:42:05Z" duration-ms="6">
      <class name="alex.PowTest">
        <test-method signature="ctgTest(double, double, double)[pri:0, instance:alex.PowTest@7494f96a]" started-at="2019-04-01T07:42:05Z" name="ctgTest" finished-at="2019-04-01T07:42:05Z" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[42.22425314473263]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [42.22425314473263] but found [32.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [42.22425314473263] but found [32.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at alex.PowTest.ctgTest(PowTest.java:15)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
      </class> <!-- alex.PowTest -->
    </test> <!-- pow test -->
  </suite> <!-- Parallel tests -->
</testng-results>
